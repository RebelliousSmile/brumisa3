/**
 * Script de test pour v√©rifier le fonctionnement du mod√®le Pdf
 * Usage: node scripts/test-pdf-model.js
 */

const Pdf = require('../src/models/Pdf');

async function testPdfModel() {
    console.log('üß™ Test du mod√®le Pdf...');
    
    try {
        const pdf = new Pdf();
        
        // Test de g√©n√©ration de nom de fichier
        console.log('\nüìÅ Test g√©n√©ration nom de fichier:');
        const fileName = pdf.genererNomFichier(
            'Mon Personnage Test',
            'monsterhearts',
            123,
            'fiche-personnage',
            'private'
        );
        console.log('Nom g√©n√©r√©:', fileName);
        
        // Test de g√©n√©ration de chemin
        console.log('\nüìÇ Test g√©n√©ration chemin:');
        const filePath = pdf.genererCheminFichier(fileName, 'monsterhearts');
        console.log('Chemin g√©n√©r√©:', filePath);
        
        // Test des m√©tadonn√©es
        console.log('\nüîç Test extraction m√©tadonn√©es:');
        const mockPdf = {
            nom_fichier: fileName
        };
        
        // Assign getters to mock object
        Object.setPrototypeOf(mockPdf, Pdf.prototype);
        
        const metadata = mockPdf.metadonneesFichier;
        console.log('M√©tadonn√©es extraites:', metadata);
        
        // Test des URLs (simulation)
        console.log('\nüîó Test g√©n√©ration URLs:');
        const mockPdfWithData = {
            id: 123,
            chemin_fichier: filePath,
            statut: 'TERMINE',
            url_partage: JSON.stringify({
                token: 'abc123',
                active: true,
                expiration: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString()
            })
        };
        
        Object.setPrototypeOf(mockPdfWithData, Pdf.prototype);
        
        console.log('URL t√©l√©chargement:', mockPdfWithData.urlTelecharger);
        console.log('URL aper√ßu:', mockPdfWithData.urlApercu);
        console.log('URL partage:', mockPdfWithData.urlPartagePublic);
        console.log('URL API:', mockPdfWithData.urlApi);
        console.log('Est public:', mockPdfWithData.estPublic);
        console.log('URLs compl√®tes:', mockPdfWithData.urls);
        
        // Test de d√©termination des droits
        console.log('\nüîê Test d√©termination des droits:');
        console.log('Priv√©:', pdf.determinerStatutDroits({}));
        console.log('Public:', pdf.determinerStatutDroits({ statut_visibilite: 'PUBLIC' }));
        console.log('Communautaire:', pdf.determinerStatutDroits({ statut_visibilite: 'COMMUNAUTAIRE' }));
        
        console.log('\n‚úÖ Tous les tests sont pass√©s !');
        
    } catch (error) {
        console.error('‚ùå Erreur lors des tests:', error.message);
        process.exit(1);
    }
}

if (require.main === module) {
    testPdfModel();
}

module.exports = { testPdfModel };