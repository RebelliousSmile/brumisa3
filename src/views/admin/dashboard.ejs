<%- include('../layouts/principal', { body: `

<div class="bg-gray-900 min-h-screen text-white" x-data="adminDashboard()">
    <!-- Header Admin -->
    <div class="bg-gradient-to-r from-red-800 to-purple-800 py-8 px-4 border-b border-gray-700">
        <div class="max-w-7xl mx-auto">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold mb-2">
                        <i class="ra ra-crown mr-3 text-yellow-400"></i>
                        Dashboard Admin
                    </h1>
                    <p class="text-red-200">Tableau de bord administrateur</p>
                </div>
                
                <div class="text-right">
                    <div class="text-sm text-red-200">Dernière mise à jour</div>
                    <div class="font-semibold" x-text="new Date().toLocaleString('fr-FR')"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 py-8">
        
        <!-- Vue d'ensemble - Cards de statistiques -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Utilisateurs -->
            <div class="bg-gray-800 rounded-lg p-6 border border-blue-500/20">
                <div class="flex items-center justify-between mb-4">
                    <div class="text-blue-400">
                        <i class="ra ra-player text-2xl"></i>
                    </div>
                    <span class="text-xs text-gray-400">Utilisateurs</span>
                </div>
                <div class="text-3xl font-bold text-white mb-2" x-text="stats.utilisateurs?.total || 0"></div>
                <div class="text-sm text-gray-400">
                    <span x-text="stats.utilisateurs?.nouveaux_mois || 0"></span> ce mois
                </div>
            </div>

            <!-- PDFs générés -->
            <div class="bg-gray-800 rounded-lg p-6 border border-green-500/20">
                <div class="flex items-center justify-between mb-4">
                    <div class="text-green-400">
                        <i class="ra ra-scroll text-2xl"></i>
                    </div>
                    <span class="text-xs text-gray-400">PDFs</span>
                </div>
                <div class="text-3xl font-bold text-white mb-2" x-text="stats.pdfs?.total || 0"></div>
                <div class="text-sm text-gray-400">
                    <span x-text="stats.pdfs?.ce_mois || 0"></span> ce mois
                </div>
            </div>

            <!-- Dons reçus -->
            <div class="bg-gray-800 rounded-lg p-6 border border-yellow-500/20">
                <div class="flex items-center justify-between mb-4">
                    <div class="text-yellow-400">
                        <i class="ra ra-gem text-2xl"></i>
                    </div>
                    <span class="text-xs text-gray-400">Dons</span>
                </div>
                <div class="text-3xl font-bold text-white mb-2" x-text="(stats.dons?.montant_total || 0) + '€'"></div>
                <div class="text-sm text-gray-400">
                    <span x-text="stats.dons?.nb_donateurs || 0"></span> donateurs
                </div>
            </div>

            <!-- Système -->
            <div class="bg-gray-800 rounded-lg p-6 border border-purple-500/20">
                <div class="flex items-center justify-between mb-4">
                    <div class="text-purple-400">
                        <i class="ra ra-server text-2xl"></i>
                    </div>
                    <span class="text-xs text-gray-400">Système</span>
                </div>
                <div class="text-lg font-bold text-white mb-2" x-text="stats.systeme?.uptime || 'N/A'"></div>
                <div class="text-sm text-gray-400">
                    <span :class="stats.systeme?.status === 'healthy' ? 'text-green-400' : 'text-red-400'" 
                          x-text="stats.systeme?.status || 'Loading...'"></span>
                </div>
            </div>
        </div>

        <!-- Graphiques et données détaillées -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            
            <!-- Utilisateurs par rôle -->
            <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
                <h3 class="text-xl font-bold mb-4 flex items-center">
                    <i class="ra ra-player-king text-blue-400 mr-3"></i>
                    Utilisateurs par rôle
                </h3>
                <div class="space-y-4">
                    <template x-for="(count, role) in stats.utilisateurs?.par_role || {}" :key="role">
                        <div class="flex items-center justify-between">
                            <span class="flex items-center">
                                <div class="w-3 h-3 rounded-full mr-3" 
                                     :class="{
                                         'bg-gray-500': role === 'UTILISATEUR',
                                         'bg-yellow-500': role === 'PREMIUM',
                                         'bg-purple-500': role === 'PREMIUM_VIP',
                                         'bg-red-500': role === 'ADMIN'
                                     }"></div>
                                <span x-text="role"></span>
                            </span>
                            <span class="font-bold" x-text="count"></span>
                        </div>
                    </template>
                </div>
            </div>

            <!-- Systèmes de JDR populaires -->
            <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
                <h3 class="text-xl font-bold mb-4 flex items-center">
                    <i class="ra ra-dice-twenty text-purple-400 mr-3"></i>
                    Systèmes populaires
                </h3>
                <div class="space-y-4">
                    <template x-for="systeme in stats.systemes_populaires || []" :key="systeme.nom">
                        <div class="flex items-center justify-between">
                            <span class="flex items-center">
                                <div class="w-3 h-3 rounded-full bg-purple-500 mr-3"></div>
                                <span x-text="systeme.nom"></span>
                            </span>
                            <span class="font-bold" x-text="systeme.count"></span>
                        </div>
                    </template>
                </div>
            </div>
        </div>

        <!-- Activité récente -->
        <div class="bg-gray-800 rounded-lg p-6 border border-gray-700 mb-8">
            <h3 class="text-xl font-bold mb-4 flex items-center">
                <i class="ra ra-clock text-green-400 mr-3"></i>
                Activité récente
            </h3>
            
            <div class="space-y-4">
                <template x-for="activite in activiteRecente || []" :key="activite.id">
                    <div class="flex items-center justify-between border-b border-gray-700 pb-3">
                        <div class="flex items-center">
                            <div class="w-8 h-8 rounded-full flex items-center justify-center mr-3"
                                 :class="{
                                     'bg-blue-500/20 text-blue-400': activite.type === 'user',
                                     'bg-green-500/20 text-green-400': activite.type === 'pdf',
                                     'bg-yellow-500/20 text-yellow-400': activite.type === 'donation'
                                 }">
                                <i class="text-sm" 
                                   :class="{
                                       'ra ra-player': activite.type === 'user',
                                       'ra ra-scroll': activite.type === 'pdf',
                                       'ra ra-gem': activite.type === 'donation'
                                   }"></i>
                            </div>
                            <div>
                                <div class="text-white" x-text="activite.description"></div>
                                <div class="text-xs text-gray-400" x-text="activite.timestamp"></div>
                            </div>
                        </div>
                        <span class="text-xs text-gray-400" x-text="activite.details"></span>
                    </div>
                </template>
            </div>
        </div>

        <!-- Actions rapides -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
            <button @click="actionRapide('cleanup-tokens')" 
                    class="bg-blue-600 hover:bg-blue-700 p-4 rounded-lg transition-colors flex items-center justify-center">
                <i class="ra ra-broom mr-2"></i>
                Nettoyer tokens
            </button>
            
            <button @click="actionRapide('cleanup-pdfs')" 
                    class="bg-green-600 hover:bg-green-700 p-4 rounded-lg transition-colors flex items-center justify-center">
                <i class="ra ra-trash mr-2"></i>
                Nettoyer PDFs
            </button>
            
            <button @click="actionRapide('backup-db')" 
                    class="bg-purple-600 hover:bg-purple-700 p-4 rounded-lg transition-colors flex items-center justify-center">
                <i class="ra ra-save mr-2"></i>
                Sauvegarder
            </button>
            
            <button @click="actionRapide('refresh-stats')" 
                    class="bg-yellow-600 hover:bg-yellow-700 p-4 rounded-lg transition-colors flex items-center justify-center">
                <i class="ra ra-refresh mr-2"></i>
                Actualiser
            </button>
        </div>

        <!-- Gestion utilisateurs -->
        <div class="bg-gray-800 rounded-lg p-6 border border-gray-700">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-xl font-bold flex items-center">
                    <i class="ra ra-group text-purple-400 mr-3"></i>
                    Gestion utilisateurs
                </h3>
                <button @click="rafraichirUtilisateurs()" class="text-purple-400 hover:text-purple-300">
                    <i class="ra ra-refresh"></i>
                </button>
            </div>
            
            <!-- Filtres -->
            <div class="flex flex-wrap gap-4 mb-4">
                <select x-model="filtreRole" @change="filtrerUtilisateurs()" 
                        class="bg-gray-700 border border-gray-600 rounded px-3 py-2 text-white">
                    <option value="">Tous les rôles</option>
                    <option value="UTILISATEUR">Utilisateur</option>
                    <option value="PREMIUM">Premium</option>
                    <option value="PREMIUM_VIP">Premium VIP</option>
                    <option value="ADMIN">Admin</option>
                </select>
                
                <input x-model="rechercheUtilisateur" @input="filtrerUtilisateurs()"
                       placeholder="Rechercher par email..." 
                       class="bg-gray-700 border border-gray-600 rounded px-3 py-2 text-white flex-1">
            </div>
            
            <!-- Liste utilisateurs -->
            <div class="space-y-2 max-h-96 overflow-y-auto">
                <template x-for="user in utilisateursAffiches || []" :key="user.id">
                    <div class="flex items-center justify-between p-3 bg-gray-700/50 rounded border border-gray-600/50">
                        <div class="flex items-center">
                            <div class="w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center mr-3">
                                <span class="text-xs font-bold text-white" x-text="user.nom?.charAt(0)?.toUpperCase() || 'U'"></span>
                            </div>
                            <div>
                                <div class="font-semibold text-white" x-text="user.nom"></div>
                                <div class="text-sm text-gray-400" x-text="user.email"></div>
                            </div>
                        </div>
                        
                        <div class="flex items-center space-x-3">
                            <span class="text-xs px-2 py-1 rounded"
                                  :class="{
                                      'bg-gray-600 text-gray-300': user.role === 'UTILISATEUR',
                                      'bg-yellow-600 text-white': user.role === 'PREMIUM',
                                      'bg-purple-600 text-white': user.role === 'PREMIUM_VIP',
                                      'bg-red-600 text-white': user.role === 'ADMIN'
                                  }" 
                                  x-text="user.role"></span>
                            
                            <div class="flex space-x-1">
                                <button @click="modifierUtilisateur(user)" 
                                        class="text-blue-400 hover:text-blue-300 p-1">
                                    <i class="ra ra-gear text-sm"></i>
                                </button>
                                <button @click="supprimerUtilisateur(user)" 
                                        class="text-red-400 hover:text-red-300 p-1">
                                    <i class="ra ra-cancel text-sm"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </template>
            </div>
        </div>
    </div>
</div>

<script>
function adminDashboard() {
    return {
        stats: {},
        activiteRecente: [],
        utilisateurs: [],
        utilisateursAffiches: [],
        filtreRole: '',
        rechercheUtilisateur: '',
        loading: false,

        async init() {
            await this.chargerStatistiques();
            await this.chargerActiviteRecente();
            await this.chargerUtilisateurs();
            
            // Actualisation automatique toutes les 5 minutes
            setInterval(() => {
                this.chargerStatistiques();
                this.chargerActiviteRecente();
            }, 5 * 60 * 1000);
        },

        async chargerStatistiques() {
            try {
                const response = await Alpine.store('app').requeteApi('/admin/statistiques');
                if (response.succes) {
                    this.stats = response.donnees;
                }
            } catch (error) {
                console.error('Erreur chargement statistiques:', error);
            }
        },

        async chargerActiviteRecente() {
            try {
                const response = await Alpine.store('app').requeteApi('/admin/activite-recente');
                if (response.succes) {
                    this.activiteRecente = response.donnees;
                }
            } catch (error) {
                console.error('Erreur chargement activité:', error);
                // Données de démo si l'API n'est pas encore implémentée
                this.activiteRecente = [
                    {
                        id: 1,
                        type: 'user',
                        description: 'Nouvel utilisateur inscrit',
                        details: 'user@example.com',
                        timestamp: 'Il y a 5 minutes'
                    },
                    {
                        id: 2,
                        type: 'pdf',
                        description: 'PDF généré avec succès',
                        details: 'Monsterhearts',
                        timestamp: 'Il y a 12 minutes'
                    },
                    {
                        id: 3,
                        type: 'donation',
                        description: 'Don reçu',
                        details: '5€',
                        timestamp: 'Il y a 1 heure'
                    }
                ];
            }
        },

        async chargerUtilisateurs() {
            try {
                const response = await Alpine.store('app').requeteApi('/admin/utilisateurs');
                if (response.succes) {
                    this.utilisateurs = response.donnees.utilisateurs || [];
                    this.utilisateursAffiches = [...this.utilisateurs];
                }
            } catch (error) {
                console.error('Erreur chargement utilisateurs:', error);
            }
        },

        filtrerUtilisateurs() {
            let utilisateursFiltres = [...this.utilisateurs];
            
            // Filtre par rôle
            if (this.filtreRole) {
                utilisateursFiltres = utilisateursFiltres.filter(u => u.role === this.filtreRole);
            }
            
            // Recherche par email
            if (this.rechercheUtilisateur) {
                const terme = this.rechercheUtilisateur.toLowerCase();
                utilisateursFiltres = utilisateursFiltres.filter(u => 
                    u.email.toLowerCase().includes(terme) || 
                    u.nom.toLowerCase().includes(terme)
                );
            }
            
            this.utilisateursAffiches = utilisateursFiltres;
        },

        async rafraichirUtilisateurs() {
            await this.chargerUtilisateurs();
            this.filtrerUtilisateurs();
        },

        async actionRapide(action) {
            this.loading = true;
            
            try {
                let endpoint = '';
                let message = '';
                
                switch(action) {
                    case 'cleanup-tokens':
                        endpoint = '/admin/cleanup-tokens';
                        message = 'Nettoyage des tokens effectué';
                        break;
                    case 'cleanup-pdfs':
                        endpoint = '/pdfs/nettoyage';
                        message = 'Nettoyage des PDFs effectué';
                        break;
                    case 'backup-db':
                        endpoint = '/admin/backup';
                        message = 'Sauvegarde lancée';
                        break;
                    case 'refresh-stats':
                        await this.chargerStatistiques();
                        message = 'Statistiques actualisées';
                        this.loading = false;
                        Alpine.store('app').ajouterMessage(message, 'succes');
                        return;
                }
                
                const response = await Alpine.store('app').requeteApi(endpoint, { method: 'POST' });
                
                if (response.succes) {
                    Alpine.store('app').ajouterMessage(message, 'succes');
                    await this.chargerStatistiques();
                } else {
                    throw new Error(response.message || 'Erreur lors de l\\'action');
                }
                
            } catch (error) {
                console.error('Erreur action rapide:', error);
                Alpine.store('app').ajouterMessage(
                    'Erreur lors de l\\'exécution : ' + error.message,
                    'erreur'
                );
            } finally {
                this.loading = false;
            }
        },

        modifierUtilisateur(user) {
            // TODO: Modal de modification utilisateur
            Alpine.store('app').ajouterMessage(
                \`Modification de \${user.email} - Fonctionnalité à implémenter\`,
                'info'
            );
        },

        async supprimerUtilisateur(user) {
            if (!confirm(\`Êtes-vous sûr de vouloir supprimer \${user.email} ?\`)) {
                return;
            }
            
            try {
                const response = await Alpine.store('app').requeteApi(\`/admin/utilisateurs/\${user.id}\`, {
                    method: 'DELETE'
                });
                
                if (response.succes) {
                    Alpine.store('app').ajouterMessage('Utilisateur supprimé', 'succes');
                    await this.rafraichirUtilisateurs();
                } else {
                    throw new Error(response.message || 'Erreur lors de la suppression');
                }
                
            } catch (error) {
                console.error('Erreur suppression utilisateur:', error);
                Alpine.store('app').ajouterMessage(
                    'Erreur lors de la suppression : ' + error.message,
                    'erreur'
                );
            }
        }
    };
}
</script>

` }) %>