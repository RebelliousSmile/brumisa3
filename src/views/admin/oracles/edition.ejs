<%- contentFor('body') %>

<!-- Page d'édition d'oracle -->
<div class="min-h-screen bg-gray-50" x-data="oracleEditor()">
    <!-- Navigation admin -->
    <header class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center space-x-4">
                    <a href="/" class="text-xl font-bold text-red-800 hover:text-red-700">
                        <i class="ra ra-dice-five mr-2"></i>
                        brumisater
                    </a>
                    <i class="fas fa-chevron-right text-gray-400"></i>
                    <a href="/admin" class="text-gray-600 hover:text-red-600">Admin</a>
                    <i class="fas fa-chevron-right text-gray-400"></i>
                    <a href="/admin/oracles" class="text-gray-600 hover:text-red-600">Oracles</a>
                    <i class="fas fa-chevron-right text-gray-400"></i>
                    <span class="text-gray-800"><%= oracle.name %></span>
                </div>
                
                <div class="flex items-center space-x-4">
                    <a href="/oracles/<%= oracle.id %>" 
                       class="text-generique hover:text-generique text-sm">
                        <i class="fas fa-eye mr-1"></i>
                        Voir l'oracle
                    </a>
                    <span class="text-sm text-gray-600">Admin: <%= utilisateur.nom %></span>
                    <a href="/deconnexion" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-sign-out-alt"></i>
                    </a>
                </div>
            </div>
        </div>
    </header>

    <!-- Contenu principal -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- En-tête de page -->
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">
                    <i class="ra ra-crystal-ball mr-3 text-purple-600"></i>
                    Édition : <%= oracle.name %>
                </h1>
                <p class="text-gray-600 mt-2">
                    Modifiez les propriétés de l'oracle et gérez ses éléments.
                </p>
            </div>
            
            <div class="flex space-x-3">
                <button @click="sauvegarderOracle()" 
                        :disabled="loading"
                        class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 disabled:bg-gray-600 disabled:text-gray-400 disabled:cursor-not-allowed">
                    <i class="fas fa-save mr-2"></i>
                    <span x-text="loading ? 'Sauvegarde...' : 'Sauvegarder'"></span>
                </button>
                
                <a href="/admin/oracles" 
                   class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700">
                    <i class="fas fa-arrow-left mr-2"></i>
                    Retour
                </a>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Colonne principale - Propriétés de l'oracle -->
            <div class="lg:col-span-2 space-y-6">
                <!-- Informations générales -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h2 class="text-xl font-semibold text-gray-900 mb-6">
                        <i class="fas fa-info-circle mr-2"></i>
                        Informations Générales
                    </h2>
                    
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Nom *</label>
                            <input type="text" x-model="oracle.name" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                            <textarea x-model="oracle.description" rows="4" 
                                      class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"></textarea>
                        </div>
                        
                        <div class="flex items-center space-x-6">
                            <label class="flex items-center">
                                <input type="checkbox" x-model="oracle.premium_required" class="rounded">
                                <span class="ml-2 text-sm text-gray-700">Accès Premium requis</span>
                            </label>
                            
                            <label class="flex items-center">
                                <input type="checkbox" x-model="oracle.is_active" class="rounded">
                                <span class="ml-2 text-sm text-gray-700">Oracle actif</span>
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Gestion des éléments -->
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-xl font-semibold text-gray-900">
                            <i class="fas fa-list mr-2"></i>
                            Éléments de l'Oracle
                            <span class="text-sm font-normal text-gray-500 ml-2">
                                (<span x-text="oracle.items.length"></span> éléments)
                            </span>
                        </h2>
                        
                        <button @click="ajouterNouvelElement()" 
                                class="bg-generique text-white px-4 py-2 rounded-lg hover:bg-generique">
                            <i class="fas fa-plus mr-2"></i>
                            Ajouter
                        </button>
                    </div>
                    
                    <!-- Liste des éléments -->
                    <div class="space-y-3" id="elements-container">
                        <template x-for="(item, index) in oracle.items" :key="item.id || index">
                            <div class="border border-gray-200 rounded-lg p-4 bg-gray-50">
                                <div class="flex items-start space-x-4">
                                    <div class="flex-1 space-y-3">
                                        <div>
                                            <label class="block text-xs font-medium text-gray-600 mb-1">Valeur *</label>
                                            <input type="text" x-model="item.value" 
                                                   class="w-full px-3 py-2 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500">
                                        </div>
                                        
                                        <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
                                            <div>
                                                <label class="block text-xs font-medium text-gray-600 mb-1">Poids</label>
                                                <input type="number" x-model="item.weight" min="0" 
                                                       class="w-full px-3 py-2 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500">
                                            </div>
                                            
                                            <div class="flex items-end">
                                                <label class="flex items-center">
                                                    <input type="checkbox" x-model="item.is_active" class="rounded">
                                                    <span class="ml-2 text-xs text-gray-700">Actif</span>
                                                </label>
                                            </div>
                                        </div>
                                        
                                        <!-- Métadonnées -->
                                        <div>
                                            <label class="block text-xs font-medium text-gray-600 mb-1">
                                                Métadonnées (JSON)
                                                <button type="button" @click="toggleMetadataHelp(index)"
                                                        class="ml-1 text-generique hover:text-generique">
                                                    <i class="fas fa-question-circle text-xs"></i>
                                                </button>
                                            </label>
                                            <textarea x-model="item.metadataJson" rows="2" 
                                                      class="w-full px-3 py-2 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-purple-500 font-mono"
                                                      placeholder='{"type": "arme", "rarity": "commune"}'></textarea>
                                            
                                            <!-- Aide métadonnées -->
                                            <div x-show="showMetadataHelp === index" x-transition 
                                                 class="mt-2 text-xs text-generique bg-generique p-2 rounded">
                                                Exemple: {"type": "arme", "rarity": "rare", "damage": "1d8"}
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Actions sur l'élément -->
                                    <div class="flex flex-col space-y-2">
                                        <button @click="dupliquerElement(index)" 
                                                class="text-generique hover:text-generique p-1"
                                                title="Dupliquer">
                                            <i class="fas fa-copy text-sm"></i>
                                        </button>
                                        
                                        <button @click="supprimerElement(index)" 
                                                class="text-red-600 hover:text-red-700 p-1"
                                                title="Supprimer">
                                            <i class="fas fa-trash text-sm"></i>
                                        </button>
                                        
                                        <!-- Réorganisation -->
                                        <button @click="monterElement(index)" 
                                                :disabled="index === 0"
                                                class="text-gray-600 hover:text-gray-700 p-1 disabled:text-gray-400 disabled:cursor-not-allowed"
                                                title="Monter">
                                            <i class="fas fa-arrow-up text-sm"></i>
                                        </button>
                                        
                                        <button @click="descendreElement(index)" 
                                                :disabled="index === oracle.items.length - 1"
                                                class="text-gray-600 hover:text-gray-700 p-1 disabled:text-gray-400 disabled:cursor-not-allowed"
                                                title="Descendre">
                                            <i class="fas fa-arrow-down text-sm"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </template>
                        
                        <!-- Message si aucun élément -->
                        <div x-show="oracle.items.length === 0" class="text-center py-8 text-gray-500">
                            <i class="fas fa-inbox text-3xl mb-2"></i>
                            <p>Aucun élément dans cet oracle</p>
                            <button @click="ajouterNouvelElement()" 
                                    class="mt-2 text-generique hover:text-generique">
                                Ajouter le premier élément
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Colonne latérale - Statistiques et actions -->
            <div class="space-y-6">
                <!-- Statistiques -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-chart-bar mr-2"></i>
                        Statistiques
                    </h3>
                    
                    <div class="space-y-3 text-sm">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Éléments totaux:</span>
                            <span class="font-medium" x-text="oracle.items.length"></span>
                        </div>
                        
                        <div class="flex justify-between">
                            <span class="text-gray-600">Éléments actifs:</span>
                            <span class="font-medium" x-text="oracle.items.filter(i => i.is_active).length"></span>
                        </div>
                        
                        <div class="flex justify-between">
                            <span class="text-gray-600">Poids total:</span>
                            <span class="font-medium" x-text="oracle.items.reduce((sum, i) => sum + (parseInt(i.weight) || 0), 0)"></span>
                        </div>
                        
                        <div class="flex justify-between">
                            <span class="text-gray-600">Poids actifs:</span>
                            <span class="font-medium" x-text="oracle.items.filter(i => i.is_active).reduce((sum, i) => sum + (parseInt(i.weight) || 0), 0)"></span>
                        </div>
                    </div>
                </div>

                <!-- Actions rapides -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-tools mr-2"></i>
                        Actions Rapides
                    </h3>
                    
                    <div class="space-y-3">
                        <button @click="normaliserPoids()" 
                                class="w-full bg-yellow-100 text-yellow-700 px-4 py-2 rounded-lg hover:bg-yellow-200 text-left">
                            <i class="fas fa-balance-scale mr-2"></i>
                            Normaliser les poids
                        </button>
                        
                        <button @click="activerTous()" 
                                class="w-full bg-green-100 text-green-700 px-4 py-2 rounded-lg hover:bg-green-200 text-left">
                            <i class="fas fa-check-circle mr-2"></i>
                            Activer tous les éléments
                        </button>
                        
                        <button @click="trierParPoids()" 
                                class="w-full bg-generique text-generique px-4 py-2 rounded-lg hover:bg-generique text-left">
                            <i class="fas fa-sort-numeric-down mr-2"></i>
                            Trier par poids
                        </button>
                        
                        <hr class="my-4">
                        
                        <button @click="effectuerTestTirage()" 
                                class="w-full bg-purple-100 text-purple-700 px-4 py-2 rounded-lg hover:bg-purple-200 text-left">
                            <i class="fas fa-dice mr-2"></i>
                            Test de tirage
                        </button>
                    </div>
                </div>

                <!-- Import/Export -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-exchange-alt mr-2"></i>
                        Import/Export
                    </h3>
                    
                    <div class="space-y-3">
                        <button @click="exporterJSON()" 
                                class="w-full bg-indigo-100 text-indigo-700 px-4 py-2 rounded-lg hover:bg-indigo-200 text-left">
                            <i class="fas fa-download mr-2"></i>
                            Exporter en JSON
                        </button>
                        
                        <button @click="exporterCSV()" 
                                class="w-full bg-indigo-100 text-indigo-700 px-4 py-2 rounded-lg hover:bg-indigo-200 text-left">
                            <i class="fas fa-file-csv mr-2"></i>
                            Exporter en CSV
                        </button>
                        
                        <div>
                            <input type="file" id="file-import" @change="importerFichier($event)" 
                                   accept=".json,.csv" class="hidden">
                            <button onclick="document.getElementById('file-import').click()" 
                                    class="w-full bg-orange-100 text-orange-700 px-4 py-2 rounded-lg hover:bg-orange-200 text-left">
                                <i class="fas fa-upload mr-2"></i>
                                Importer fichier
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>

<script>
function oracleEditor() {
    return {
        oracle: <%= JSON.stringify(oracle) %>,
        loading: false,
        showMetadataHelp: null,
        
        init() {
            // Initialiser les métadonnées JSON pour l'affichage
            this.oracle.items.forEach(item => {
                item.metadataJson = item.metadata ? JSON.stringify(item.metadata) : '';
            });
        },
        
        async sauvegarderOracle() {
            this.loading = true;
            
            try {
                // Traiter les métadonnées JSON
                this.oracle.items.forEach(item => {
                    try {
                        item.metadata = item.metadataJson ? JSON.parse(item.metadataJson) : null;
                    } catch (e) {
                        item.metadata = null;
                    }
                });
                
                // Sauvegarder l'oracle
                const oracleResponse = await fetch(`/api/admin/oracles/<%= oracle.id %>`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        name: this.oracle.name,
                        description: this.oracle.description,
                        premium_required: this.oracle.premium_required,
                        is_active: this.oracle.is_active
                    })
                });
                
                if (!oracleResponse.ok) throw new Error('Erreur sauvegarde oracle');
                
                // Sauvegarder chaque élément
                for (const item of this.oracle.items) {
                    if (item.id) {
                        // Mise à jour d'un élément existant
                        await fetch(`/api/admin/oracles/<%= oracle.id %>/items/${item.id}`, {
                            method: 'PUT',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                value: item.value,
                                weight: parseInt(item.weight) || 1,
                                metadata: item.metadata,
                                is_active: item.is_active
                            })
                        });
                    } else {
                        // Création d'un nouvel élément
                        const response = await fetch(`/api/admin/oracles/<%= oracle.id %>/items`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                value: item.value,
                                weight: parseInt(item.weight) || 1,
                                metadata: item.metadata,
                                is_active: item.is_active
                            })
                        });
                        
                        if (response.ok) {
                            const result = await response.json();
                            item.id = result.donnees.id;
                        }
                    }
                }
                
                alert('Oracle sauvegardé avec succès !');
                
            } catch (error) {
                alert('Erreur lors de la sauvegarde: ' + error.message);
            } finally {
                this.loading = false;
            }
        },
        
        ajouterNouvelElement() {
            this.oracle.items.push({
                value: '',
                weight: 1,
                metadata: null,
                metadataJson: '',
                is_active: true
            });
        },
        
        dupliquerElement(index) {
            const original = this.oracle.items[index];
            this.oracle.items.splice(index + 1, 0, {
                value: original.value + ' (Copie)',
                weight: original.weight,
                metadata: original.metadata,
                metadataJson: original.metadataJson,
                is_active: original.is_active
            });
        },
        
        supprimerElement(index) {
            if (confirm('Supprimer cet élément ?')) {
                this.oracle.items.splice(index, 1);
            }
        },
        
        monterElement(index) {
            if (index > 0) {
                [this.oracle.items[index], this.oracle.items[index - 1]] = 
                [this.oracle.items[index - 1], this.oracle.items[index]];
            }
        },
        
        descendreElement(index) {
            if (index < this.oracle.items.length - 1) {
                [this.oracle.items[index], this.oracle.items[index + 1]] = 
                [this.oracle.items[index + 1], this.oracle.items[index]];
            }
        },
        
        normaliserPoids() {
            const total = this.oracle.items.reduce((sum, item) => sum + (parseInt(item.weight) || 1), 0);
            if (total === 0) return;
            
            this.oracle.items.forEach(item => {
                const poids = parseInt(item.weight) || 1;
                item.weight = Math.max(1, Math.round((poids / total) * 100));
            });
        },
        
        activerTous() {
            this.oracle.items.forEach(item => item.is_active = true);
        },
        
        trierParPoids() {
            this.oracle.items.sort((a, b) => (parseInt(b.weight) || 0) - (parseInt(a.weight) || 0));
        },
        
        async effectuerTestTirage() {
            try {
                const response = await fetch(`/api/oracles/<%= oracle.id %>/draw`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ count: 1, withReplacement: true })
                });
                
                const data = await response.json();
                if (data.succes) {
                    const result = data.donnees.results[0];
                    alert(`Résultat du test: ${result.value}${result.weight ? ` (poids: ${result.weight})` : ''}`);
                } else {
                    alert('Erreur test: ' + data.message);
                }
            } catch (error) {
                alert('Erreur test: ' + error.message);
            }
        },
        
        exporterJSON() {
            const data = {
                oracle: {
                    name: this.oracle.name,
                    description: this.oracle.description,
                    premium_required: this.oracle.premium_required
                },
                items: this.oracle.items.map(item => ({
                    value: item.value,
                    weight: parseInt(item.weight) || 1,
                    metadata: item.metadata,
                    is_active: item.is_active
                }))
            };
            
            const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `oracle_${this.oracle.name.replace(/[^a-zA-Z0-9]/g, '_')}.json`;
            a.click();
            URL.revokeObjectURL(url);
        },
        
        exporterCSV() {
            const headers = 'value,weight,is_active,metadata\n';
            const rows = this.oracle.items.map(item => 
                `"${item.value}",${item.weight},${item.is_active},"${item.metadataJson}"`
            ).join('\n');
            
            const blob = new Blob([headers + rows], { type: 'text/csv' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `oracle_${this.oracle.name.replace(/[^a-zA-Z0-9]/g, '_')}.csv`;
            a.click();
            URL.revokeObjectURL(url);
        },
        
        toggleMetadataHelp(index) {
            this.showMetadataHelp = this.showMetadataHelp === index ? null : index;
        }
    }
}
</script>

<%- contentFor('title') %>
<%= titre %>