// Brumisa3 - MVP v1.0 Schema
// City of Mist / Legends in the Mist Character Sheet Creator
// Generated: 2025-10-31

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// AUTH & USER MANAGEMENT
// ============================================

model User {
  id         String      @id @default(cuid())
  email      String?     @unique
  name       String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  playspaces Playspace[]

  @@index([email])
  @@map("users")
}

// ============================================
// PLAYSPACE (Game Workspace - Context Unique)
// ============================================

model Playspace {
  id          String      @id @default(cuid())
  name        String
  description String?
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  systemId    String      // "city-of-mist" | "litm" | future systems
  characters  Character[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([userId])
  @@index([systemId])
  @@map("playspaces")
}

// ============================================
// CHARACTER (Player/NPC)
// ============================================

model Character {
  id          String     @id @default(cuid())
  name        String
  description String?
  playspaceId String
  playspace   Playspace  @relation(fields: [playspaceId], references: [id], onDelete: Cascade)
  themeCards  ThemeCard[]
  heroCard    HeroCard?
  trackers    Trackers?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([playspaceId])
  @@index([createdAt])
  @@map("characters")
}

// ============================================
// THEME CARDS
// ============================================

enum ThemeType {
  // City of Mist
  MYTHOS
  LOGOS
  MIST
  CREW

  // Legends in the Mist
  ORIGIN
  ADVENTURE
  GREATNESS
  FELLOWSHIP
  BACKPACK
}

model ThemeCard {
  id          String    @id @default(cuid())
  name        String
  type        ThemeType
  description String?
  attention   Int       @default(0) // 0-3 (crack/mark/fade for City of Mist)
  characterId String
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  tags        Tag[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([characterId])
  @@map("theme_cards")
}

// ============================================
// TAGS (Powers, Weaknesses, Story)
// ============================================

enum TagType {
  POWER
  WEAKNESS
  STORY
}

model Tag {
  id          String    @id @default(cuid())
  name        String
  type        TagType
  burned      Boolean   @default(false)
  inverted    Boolean   @default(false) // weakness as power
  themeCardId String
  themeCard   ThemeCard @relation(fields: [themeCardId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([themeCardId])
  @@index([type])
  @@map("tags")
}

// ============================================
// HERO CARD (Identity & Mystery)
// ============================================

model HeroCard {
  id            String         @id @default(cuid())
  identity      String         // Mundane life
  mystery       String         // Mythical connection
  characterId   String         @unique
  character     Character      @relation(fields: [characterId], references: [id], onDelete: Cascade)
  relationships Relationship[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@index([characterId])
  @@map("hero_cards")
}

model Relationship {
  id          String   @id @default(cuid())
  name        String   // Character/NPC name
  description String?  // Nature of relationship
  heroCardId  String
  heroCard    HeroCard @relation(fields: [heroCardId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([heroCardId])
  @@map("relationships")
}

// ============================================
// TRACKERS (Status, Story Tags, Story Themes)
// ============================================

model Trackers {
  id          String       @id @default(cuid())
  characterId String       @unique
  character   Character    @relation(fields: [characterId], references: [id], onDelete: Cascade)
  statuses    Status[]
  storyTags   StoryTag[]
  storyThemes StoryTheme[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([characterId])
  @@map("trackers")
}

model Status {
  id         String   @id @default(cuid())
  name       String
  tier       Int      @default(1) // 1-6
  positive   Boolean  @default(true)
  trackersId String
  trackers   Trackers @relation(fields: [trackersId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([trackersId])
  @@map("statuses")
}

model StoryTag {
  id         String   @id @default(cuid())
  name       String
  trackersId String
  trackers   Trackers @relation(fields: [trackersId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([trackersId])
  @@map("story_tags")
}

model StoryTheme {
  id         String   @id @default(cuid())
  name       String
  trackersId String
  trackers   Trackers @relation(fields: [trackersId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([trackersId])
  @@map("story_themes")
}

// ============================================
// DANGER (NPCs/Threats - Optional for MVP)
// ============================================

model Danger {
  id          String    @id @default(cuid())
  name        String
  description String?
  playspaceId String
  // Note: Dangers can optionally link to playspace for organization
  // Full Danger implementation planned for v1.4+
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([playspaceId])
  @@map("dangers")
}
